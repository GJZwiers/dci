name: build

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.deno-version == 'canary' }}
    strategy:
      matrix:
        os: [ ubuntu-22.04, macos-12, windows-2022 ]
        deno-version: [ v1.x ]
        include:
          - deno-version: canary
            os: ubuntu-22.04
    env:
      DENO_DIR: deno_dir

    steps:
      - name: Configure line-endings for Windows build
        if: matrix.os == 'windows-2022'
        run: |
          git config --system core.autocrlf false
          git config --system core.eol lf

      - uses: actions/checkout@v3
      - uses: denoland/setup-deno@v1.1.1
        with:
          deno-version: ${{ matrix.deno-version }}

      - run: deno fmt --check
      - run: deno lint
      - run: deno check mod.ts

      - name: Cache DENO_DIR
        uses: actions/cache@v2
        with:
          path: ${{ env.DENO_DIR }}
          key: ${{ hashFiles('lock.json') }}

      - run: deno test --allow-read --allow-write --lock=lock.json --coverage=cov/

      - if: matrix.os == 'ubuntu-22.04' && matrix.deno-version != 'canary'
        run: deno coverage --lcov --output=cov.lcov cov/

      - if: matrix.os == 'ubuntu-22.04' && matrix.deno-version != 'canary'
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: cov.lcov
